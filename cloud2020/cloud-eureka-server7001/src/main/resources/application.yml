server:
  port: 7001

eureka:
  instance:
    hostname: eureka7001.com #eureka服务端的实例名字
  client:
    #表识不向注册中心注册自己
    register-with-eureka: false
    #表示自己就是注册中心，职责是维护服务实例，并不需要去检索服务
    fetch-registry: false
    service-url:
      #设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址
      #      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      defaultZone: http://eureka7002.com:7002/eureka/

#  server:
#    #关闭自我保护机制，保证不可以服务被及时剔除 默认是开启的
#    enable-self-preservation: false
#    eviction-interval-timer-in-ms: 2000

#spring:
#  application:
#    name: ccc
#eureka:
#  instance:
#    hostname: ${spring.application.name}
#    ip-address: 当前实例启动的服务器ip地址
#    prefer-ip-address: 是否支持注册中心使用当前服务的id地址
#    lease-renewal-interval-in-seconds: 客户端向服务端发送心跳的时间间隔，单位为秒(默认为30秒)
#    lease-expiration-duration-in-seconds: 客户端收到最后一次心跳后等待时间上限，默认为90秒，超时将剔除服务
#  client:
#    register-with-eureka: 是否向注册中心注册
#    fetch-registry: 是否拉取其他服务
#    service-url:
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/,http://${eureka.instance.hostname}:${server.port}/eureka/
#  server:
#    enable-self-preservation: 是否开启自我我保护机制
#    eviction-interval-timer-in-ms: 多少秒后服务无心跳关闭服务
